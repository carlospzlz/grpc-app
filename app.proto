syntax = "proto3";

package app;

// The Data Service definition.
service DataService
{
  // A simple RPC that returns a Number.
  //
  // Obtains the number with the given name. These are the available names:
  // [ "one", "two", "three", "four" ]
  rpc GetNumber(NumberRequest) returns (NumberReply) { }

  // A simple RPC that returns a String.
  //
  // Obtains the string at the given index in the storage vector. This is the
  // server's storage vector:
  // [ "foo", "bar", "spam", "ham", "eggs" ]
  rpc GetString(StringRequest) returns (StringReply) { }

  // A server-to-client streaming RPC that returns a File.
  //
  // Returns a file as a stream of chunks. This way, both the server and the
  // client do not need to bring the whole file to memory. This approach is
  // particularly appropriate for trasmitting big files (> 1GB). Also, this
  // could facilitate to handle interruptions or partial file recoveries in the
  // future.
  rpc GetFile(FileRequest) returns (stream FileChunk) { }
}

// The Number Request containing the name of the number.
message NumberRequest
{
  string name = 1;
}

// The Number Reply containing the number.
message NumberReply
{
  int32 number = 1;
}

// The String Request containing the index of the string.
message StringRequest
{
  int32 index = 1;
}

// The String Reply containing the string.
message StringReply
{
  string string_ = 1;
}

// The File Request containing the name of the file.
message FileRequest
{
  string filename = 1;
}

// The File Chunk containing a part of the file.
message FileChunk
{
  bytes content = 1;
  int32 size = 2;
}
