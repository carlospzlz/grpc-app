#!/usr/bin/env python3

import argparse

import grpc

import app_pb2_grpc

import client_core


def parse_args():
    """
    Parses arguments given by the user in the command line.
    """
    description = (
        'Example client to request a number, string or file to the server.')
    parser = argparse.ArgumentParser(description= description)
    parser.add_argument('--hostname', '-H', default='localhost',
                        help='Hostname where the server is running (localhost)')
    parser.add_argument('--port', '-p', default='50051',
                        help='Port where the server is running (50051)')
    parser.add_argument('IDENTIFIER',
                        help='Identifier of the resource requested')
    parser.add_argument('--request', '-r', required=True,
                        choices=['number', 'string', 'file'],
                        help='Type of data to request.')
    return parser.parse_args()


GET = {
    'number': client_core.getNumber,
    'string': client_core.getString,
    'file': client_core.getFile,
}


def main():
    args = parse_args()
    endpoint = "{}:{}".format(args.hostname, args.port)
    with grpc.insecure_channel(endpoint) as channel:
        stub = app_pb2_grpc.DataServiceStub(channel)
        try:
            data = GET[args.request](args.IDENTIFIER, stub)
            print("Received data: {}".format(data))
        except grpc.RpcError as e:
            print('ERROR: {}: {}'.format(e.code(), e.details()))


if __name__ == '__main__':
    main()

